--[[
    The test enterprise offers test services for debugging/ testing purposes.
--]]

--                _     _ _         __                  _   _
--               | |   | (_)       / _|                | | (_)
--    _ __  _   _| |__ | |_  ___  | |_ _   _ _ __   ___| |_ _  ___  _ __  ___
--   | '_ \| | | | '_ \| | |/ __| |  _| | | | '_ \ / __| __| |/ _ \| '_ \/ __|
--   | |_) | |_| | |_) | | | (__  | | | |_| | | | | (__| |_| | (_) | | | \__ \
--   | .__/ \__,_|_.__/|_|_|\___| |_|  \__,_|_| |_|\___|\__|_|\___/|_| |_|___/
--   | |
--   |_|

function TestPureLogicService(serviceData)
    corelog.WriteToLog("enterprise_test.TestPureLogicService("..textutils.serialize(serviceData)..")")

    -- check input
    if type(serviceData) ~= "table" then
        corelog.Error('enterprise_factory.TestPureLogicService: Invalid serviceData input')
        return {success = false}
    end

    -- determine result to return
    local serviceResult = { success = true}
    if type(serviceData.serviceResult) == "table" then
        serviceResult = serviceData.serviceResult
    end

    return serviceResult
end

function TestServiceWithAssignment(serviceData)
    corelog.WriteToLog("enterprise_test.TestServiceWithAssignment("..textutils.serialize(serviceData)..")")

    -- create assignment arguments
    local metaData = {
        startTime = coreutils.UniversalTime(),
        location = {x= 0, y= 0, z= 1, dx=0, dy=1},
        needTool = false,
        needTurtle = false,
        fuelNeeded = 0
    }
    local taskFunction = "enterprise_test.Func1_Task"
    local taskData = {
        arg1 = serviceData
    }
    local callbackFunction = "enterprise_test.ACallBackFunc1"

    -- add assignment
    coreassignment.AddAssignment(metaData, taskFunction, taskData, callbackFunction, {})
end

function TestServiceWithAssignmentAndCallback(serviceData, callbackFunction)
    corelog.WriteToLog("enterprise_test.TestServiceWithAssignmentAndCallback("..textutils.serialize(serviceData)..", "..callbackFunction..")")

    -- create assignment arguments
    local metaData = {
        startTime = coreutils.UniversalTime(),
        location = {x= 0, y= 0, z= 1, dx=0, dy=1},
        needTool = false,
        needTurtle = false,
        fuelNeeded = 0
    }
    local taskFunction = "enterprise_test.Func1_Task"
    local taskData = {
        arg1 = serviceData
    }

    -- add assignment
    coreassignment.AddAssignment(metaData, taskFunction, taskData, callbackFunction, {})
end

function TestServiceWithAssignmentAndCallbackAndArguments(serviceData, callbackFunction, callbackData)
    corelog.WriteToLog("enterprise_test.TestServiceWithAssignmentAndCallbackAndArguments("..textutils.serialize(serviceData)..", "..callbackFunction..", "..textutils.serialize(callbackData)..")")

    -- create assignment arguments
    local metaData = {
        startTime = coreutils.UniversalTime(),
        location = {x= 0, y= 0, z= 1, dx=0, dy=1},
        needTool = false,
        needTurtle = false,
        fuelNeeded = 0
    }
    local taskFunction = "enterprise_test.Func1_Task"
    local taskData = {
        arg1 = serviceData
    }

    -- add assignment
    coreassignment.AddAssignment(metaData, taskFunction, taskData, callbackFunction, callbackData)
end

--    _                 _    __                  _   _
--   | |               | |  / _|                | | (_)
--   | | ___   ___ __ _| | | |_ _   _ _ __   ___| |_ _  ___  _ __  ___
--   | |/ _ \ / __/ _` | | |  _| | | | '_ \ / __| __| |/ _ \| '_ \/ __|
--   | | (_) | (_| (_| | | | | | |_| | | | | (__| |_| | (_) | | | \__ \
--   |_|\___/ \___\__,_|_| |_|  \__,_|_| |_|\___|\__|_|\___/|_| |_|___/

function Func1_Task(taskData)
    corelog.WriteToLog("enterprise_test.Func1_Task("..textutils.serialise(taskData)..").")

    return { success = true, input = taskData.arg1 }
end

function ACallBackFunc1(callbackData, testResult)
    corelog.WriteToLog("enterprise_test.ACallBackFunc1("..textutils.serialise(callbackData)..", "..textutils.serialise(testResult)..") called.")
end


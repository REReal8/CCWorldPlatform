--[[
    The Turtle enterprise offers services fror turtles.

--]]

--                _     _ _         __                  _   _
--               | |   | (_)       / _|                | | (_)
--    _ __  _   _| |__ | |_  ___  | |_ _   _ _ __   ___| |_ _  ___  _ __  ___
--   | '_ \| | | | '_ \| | |/ __| |  _| | | | '_ \ / __| __| |/ _ \| '_ \/ __|
--   | |_) | |_| | |_) | | | (__  | | | |_| | | | | (__| |_| | (_) | | | \__ \
--   | .__/ \__,_|_.__/|_|_|\___| |_|  \__,_|_| |_|\___|\__|_|\___/|_| |_|___/
--   | |
--   |_|

local hostName = "turtle"

function ItemsAvailableAt(queryData)
    --[[
        This sync public ISH service queries this enterprise for the availability of items. The ISH and query are specified by the "base" (i.e. "ccwprp://host:port/path")
        and "query" component (i.e. `?itemName=itemCount`) of an URL.

        Return value:
                                    - (table)
                success             - (boolean) whether all the queried items are available via this ISH.

        Parameters:
            queryData               - (table) data about the query
                itemQueryURL        - (table) a URL specifying the items availability that needs to be queried
                                        (the "base" component of the URL should specify this ISH)
                                        (the "query" component of the URL specifies the items to query for)
    --]]

    -- check input
    if type(queryData) ~= "table" or type(queryData.itemQueryURL) ~= "table" then
        corelog.Error("enterprise_isp.ItemsAvailableAt: Invalid queryData input.")
        return {success = false}
    end

    -- check host is from this enterprise
    local itemQueryURL = queryData.itemQueryURL
    local host = itemQueryURL:getHost()
    if type(host) ~= "string" then corelog.Error("enterprise_turtle.ItemsAvailableAt: Invalid host input.") return {success = false} end
    if host ~= hostName then corelog.Error("enterprise_turtle.ItemsAvailableAt: I am not the host for `"..host.."` queries.") return {success = false} end

    -- select turtle
    -- ToDo: based on port #
    corelog.Warning("enterprise_turtle.ItemsAvailableAt: Selection of specific turtle not yet implemented.")

    -- query turtle for items
    corelog.Warning("enterprise_turtle.ItemsAvailableAt: Quering turtle inventory not yet implemented.") 
    return {success = true} -- assume the inventory has it for now ToDo: implement properly
end

--    _                 _    __                  _   _
--   | |               | |  / _|                | | (_)
--   | | ___   ___ __ _| | | |_ _   _ _ __   ___| |_ _  ___  _ __  ___
--   | |/ _ \ / __/ _` | | |  _| | | | '_ \ / __| __| |/ _ \| '_ \/ __|
--   | | (_) | (_| (_| | | | | | |_| | | | | (__| |_| | (_) | | | \__ \
--   |_|\___/ \___\__,_|_| |_|  \__,_|_| |_|\___|\__|_|\___/|_| |_|___/


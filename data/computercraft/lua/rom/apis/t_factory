local baseLocationV0 = {x=6, y= 0, z= 1, dx=0, dy=1}
local baseLocationV1 = {x=12, y= 0, z= 1, dx=0, dy=1}
local baseLocationV2 = baseLocationV1

function T_ProvideItemsTo_Craft()
    local callbackFunction = "t_main.Func1_Callback"
    local callbackData = {"some callback data"}
    local itemsLocator = enterprise_factory.GetHostLocator_SSrv({ }).hostLocator
    local items = { ["minecraft:birch_planks"] = 12 }
    itemsLocator:setQuery(items)

    enterprise_factory.ProvideItemsTo_ASrv({
        itemsLocator                = itemsLocator,
        ingredientsSupplierLocator  = enterprise_turtle.GetHostLocator_SSrv({ }).hostLocator,
        storageLocator              = enterprise_turtle.GetHostLocator_SSrv({ }).hostLocator,
    }, callbackFunction, callbackData)
end

function T_ProvideItemsTo_Smelt()
    local callbackFunction = "t_main.Func1_Callback"
    local callbackData = {"some callback data"}
    local itemsLocator = enterprise_factory.GetHostLocator_SSrv({ }).hostLocator
    local items = { ["minecraft:charcoal"] = 3 }
    itemsLocator:setQuery(items)

    enterprise_factory.ProvideItemsTo_ASrv({
        itemsLocator                = itemsLocator,
        ingredientsSupplierLocator  = enterprise_turtle.GetHostLocator_SSrv({ }).hostLocator,
        storageLocator              = enterprise_turtle.GetHostLocator_SSrv({ }).hostLocator,
    }, callbackFunction, callbackData)
end

function T_FuelNeed_Production_Att()
    -- prepare test
    corelog.WriteToLog("# Test FuelNeed_Production_Att")
    local items = { ["minecraft:birch_planks"] = 4 }
    local location = coremove.GetLocation()
    StartNewV0Site(location)

    -- check
    local fuelNeed = enterprise_factory.FuelNeed_Production_Att(items)
    corelog.WriteToLog("   "..fuelNeed.." fuelNeed for "..textutils.serialize(items))

    -- cleanup test
    StopV0Site(location)
end

function T_BuildAndStartNewV1Site()
    enterprise_factory.BuildAndStartNewSite_ASrv({
        baseLocation            = baseLocationV1,
        siteVersion             = "v1",
        upgrade                 = false,
        materialsHostLocator    = enterprise_turtle.GetHostLocator_SSrv({ }).hostLocator
    }, "t_main.Func1_Callback", {"some callback data"})
end

function T_BuildAndStartNewV2Site()
    enterprise_factory.BuildAndStartNewSite_ASrv({
        baseLocation            = baseLocationV2,
        siteVersion             = "v2",
        upgrade                 = true,
        materialsHostLocator    = enterprise_turtle.GetHostLocator_SSrv({ }).hostLocator
    }, "t_main.Func1_Callback", {"some callback data"})
end

function T_StopAndDismantleV1Site()
    enterprise_factory.StopAndDismantleSite_ASrv({
        baseLocation            = baseLocationV1,
        siteVersion             = "v1",
        materialsHostLocator    = enterprise_turtle.GetHostLocator_SSrv({ }).hostLocator
    }, "t_main.Func1_Callback", {"some callback data"})
end

function T_BuildNewV0Site()
    enterprise_factory.BuildNewSite_ASrv({
        baseLocation            = baseLocationV0,
        siteVersion             = "v0",
        upgrade                 = false,
        materialsHostLocator    = enterprise_turtle.GetHostLocator_SSrv({ }).hostLocator
    }, "t_main.Func1_Callback", {"some callback data"})
end

function T_StartNewV0Site()
    StartNewV0Site(baseLocationV0)
end

function StartNewV0Site(baseLocation)
    enterprise_factory.StartNewSite_SSrv({
        baseLocation        = baseLocation,
        siteVersion         = "v0",
        siteAlreadyBuild    = true
    }, "t_main.Func1_Callback", {"some callback data"})
end

function T_DismantleV0Site()
    DismantleV0Site(baseLocationV0)
end

function DismantleV0Site(baseLocation)
    enterprise_factory.DismantleSite_ASrv({
        baseLocation            = baseLocation,
        siteVersion             = "v0",
        siteStopped             = true,
        materialsHostLocator    = enterprise_turtle.GetHostLocator_SSrv({ }).hostLocator
    }, "t_main.Func1_Callback", {"some callback data"})
end

function T_StopV0Site()
    StopV0Site(baseLocationV0)
end

function StopV0Site(baseLocation)
    enterprise_factory.StopSite_ASrv({
        baseLocation    = baseLocation
    }, "t_main.Func1_Callback", {"some callback data"})
end

function T_DeleteSites()
    enterprise_factory.DeleteSites()
end


-- ToDo: consider splitting into to enterprise_wood and site_forest


function NewForest()
    -- we zijn nieuw, we maken ons eigen ID aan
    local enterpriseId = coreutils.NewId()

    -- aanmaken in het dht
    coredht.SaveData({
        enterpriseId    = enterpriseId,
        enterpriseName  = "enterprise_wood",
        lastHarvest     = 0,
        inbox           = {},
        taskList        = {},
        diepte          = 4,
        breedte         = 4,
        startpunt       = {},
    }, "enterprises", enterpriseId)

    -- nu hebben we maar 1 taak, dus ff ID en taak zelf maken
--    NewHarvestingTask(enterpriseId)

    -- mooi, nieuwe aangemaakt
    Init(enterpriseId)
end

function Init(enterpriseId)
    NewForesterJob(enterpriseId, 0)
end

function ProcessNextTask(enterpriseId)
    -- task markeren als in behandeling

    --de task in de queue zetten
    coretask.AddWork(role_forester.Rondje, {depth=3, width=2})
end

function ProcessNextMessage(enterpriseId)
end

function TaskComplete(enterpriseId)
    -- task uit de lijst halen, toch afgerond
--    coredht.SaveData(nil, "enterprises", enterpriseId, "taskList", task.taskId)

    -- moeten we nog iets doen nu de task is afgerond?
    NewForesterJob(enterpriseId, 12)
end

function NewForesterJob(enterpriseId, extraTime)
    -- paramters
    if not enterpriseId then return end
    extraTime = extraTime or 0

    -- create
    corejob.NewJob({
        enterpriseId    = enterpriseId,
        location        = coredht.GetData("enterprises", enterpriseId, "location"), -- locatie van het bos, waar het werk plaats zal vinden
        startTime       = coreutils.UniversalTime() + extraTime,
        needTool        = true,                                                     -- waarschijnlijk het bos weer omhakken, dus tool nodig
        needTurtle      = true                                                      -- waarschijnlijk het bos weer omhakken, dus turtle nodig
})
end

function NewHarvestingTask(enterpriseId)
    local taskId        = coreutils.NewId()

    -- toevoegen aan de lijst
    coredht.SaveData({
        functionName    = 'role_forester.Rondje({depth=3, width=2})',
        functionData    = {},
        created         = coreutils.UniversalTime(),
        notBefore       = coreutils.UniversalTime() + 12.00,
        enterpriseId    = enterpriseId,
        taskId          = taskId}, "enterprises", enterpriseId, "taskList", taskId)

    -- klaar zo
    return taskId
end


--   _           _ _     _               _   _
--   | |         (_) |   | |             | | | |
--   | |__  _   _ _| | __| |  _ __   __ _| |_| |_ ___ _ __ _ __  ___
--   | '_ \| | | | | |/ _` | | '_ \ / _` | __| __/ _ \ '__| '_ \/ __|
--   | |_) | |_| | | | (_| | | |_) | (_| | |_| ||  __/ |  | | | \__ \
--   |_.__/ \__,_|_|_|\__,_| | .__/ \__,_|\__|\__\___|_|  |_| |_|___/
--                           | |
--                           |_|

tree_pattern = {
    deltaX      = 6,
    deltaY      = 6,
    objectList  = {
        { x = 3, y = 3, block = "minecraft:birch_sapling"},
        { x = 3, y = 0, block = "minecraft:torch"},
        { x = 0, y = 3, block = "minecraft:torch"},
    },
    clearRemainingSpace = true,
}

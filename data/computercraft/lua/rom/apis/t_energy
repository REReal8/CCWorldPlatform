local level0 = 0
local level1 = 1

function T_All()
    T_GetFuelNeed_Refuel_Att()
    T_GetRefuelAmount_Att()
end

function T_ResetParameters()
    enterprise_energy.ResetParameters()
end

function T_GetFuelNeed_Refuel_Att()
    -- prepare test
    corelog.WriteToLog("# GetFuelNeed_Refuel_Att tests")
    local forest = t_mobj_birchforest.CreateForest() if not forest then corelog.Error("failed obtaining forest") return end
    local forestLocator = enterprise_forestry.SaveForest(forest)

    local location = coremove.GetLocation()
    t_factory.StartNewV0Site(location)

    local energyParameters = enterprise_energy.GetParameters()
    local originalLevel = energyParameters.enterpriseLevel
    local originalLocator = energyParameters.forestLocator

    -- test
    enterprise_energy.UpdateEnterprise_SSrv({ enterpriseLevel = level0, forestLocator = forestLocator })
    local fuelNeed = enterprise_energy.GetFuelNeed_Refuel_Att()
    local expectedFuelNeed = 41
    assert(fuelNeed == expectedFuelNeed, "gotten fuelNeed(="..fuelNeed..") for enterpriseLevel "..level0.." not the same as expected(="..expectedFuelNeed..")")

    enterprise_energy.UpdateEnterprise_SSrv({ enterpriseLevel = level1, forestLocator = forestLocator })
    fuelNeed = enterprise_energy.GetFuelNeed_Refuel_Att()
    expectedFuelNeed = 89
    assert(fuelNeed == expectedFuelNeed, "gotten fuelNeed(="..fuelNeed..") for enterpriseLevel "..level1.." not the same as expected(="..expectedFuelNeed..")")

    -- cleanup test
    enterprise_energy.UpdateEnterprise_SSrv({ enterpriseLevel = originalLevel, forestLocator = originalLocator })

    t_factory.StopV0Site(location)

    enterprise_forestry.RemoveForest(forestLocator)
end

function T_GetRefuelAmount_Att()
    -- prepare test
    corelog.WriteToLog("# GetRefuelAmount_Att tests")
    local energyParameters = enterprise_energy.GetParameters()
    local originalLevel = energyParameters.enterpriseLevel
    local originalForestLocator = energyParameters.forestLocator

    -- test
    enterprise_energy.UpdateEnterprise_SSrv({ enterpriseLevel = level0, forestLocator = originalForestLocator })
    local refuelAmount = enterprise_energy.GetRefuelAmount_Att()
    local expectedRefuelAmount = 60
    assert(refuelAmount == expectedRefuelAmount, "gotten refuelAmount(="..refuelAmount..") for enterpriseLevel "..level0.." not the same as expected(="..expectedRefuelAmount..")")

    enterprise_energy.UpdateEnterprise_SSrv({ enterpriseLevel = level1, forestLocator = originalForestLocator })
    refuelAmount = enterprise_energy.GetRefuelAmount_Att()
    expectedRefuelAmount = 300
    assert(refuelAmount == expectedRefuelAmount, "gotten refuelAmount(="..refuelAmount..") for enterpriseLevel "..level1.." not the same as expected(="..expectedRefuelAmount..")")

    -- cleanup test
    enterprise_energy.UpdateEnterprise_SSrv({ enterpriseLevel = originalLevel, forestLocator = originalForestLocator })
end

local db    = {
    maxSlots    = 53,
}

function OrganizeTopChests(taskData)
    local enterpriseId  = taskData.enterpriseId
    local data          = coredht.GetData("enterprises", enterpriseId)
    local toStorage     = {}

    -- make a list what's in the top chests
    for chestId, chest in pairs(data.topchests) do

        -- get the storage list of this chest
        for itemName, itemCount in pairs(chest.itemList) do

            -- item known in table?
            if not toStorage[ itemName ] then toStorage[ itemName ] = { count = 0, sources = {} } end

            -- add the counter
            toStorage[ itemName ].count = toStorage[ itemName ].count + itemCount

            -- add the source
            toStorage[ itemName ].sources[ chestId ] = itemCount
        end
    end

    -- see what we can move to the storage chests
    local pickupList    = {}
    local deliveryList  = {}

    -- loop the storage chests
    for chestId, chest in pairs(data.storagechests) do


        -- is this chest free?
        if not chest.itemName then

            -- claim if we have stuff to store


        end


        -- already item assigned?
        if chest.itemName then

            -- do we need storage for this item?
            if toStorage[ chest.itemName ] then

                -- see how many we can store here
                local storageMax    = db.maxSlots * coreinventory.GetStackSize( chest.itemName )
                local freeSpace     = storageMax - chest.itemCount
                local neededSpace   = toStorage[ chest.itemName ].itemCount

                -- how many do we storage
                local transfering   = 0
                if freeSpace < neededSpace  then transfering = freeSpace
                                            else transfering = neededSpace
                end

                -- add to pickup list, loop all sources
                local sources       = toStorage[ chest.itemName ].sources
                for sourceChestId, sourceItemCount in pairs(sources) do


                end

                -- add to delivery list
                deliveryList[ chestId ] = { itemCount = transfering }
            end
        end
    end
end

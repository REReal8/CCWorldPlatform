function T_dummy()
    corelog.WriteToLog("Running T_()")
    print("!")
end

function T_All()
    -- general tests
    t_obj_url.T_All()

    -- role tests
    t_builder.T_All()

    -- mobj tests
    t_obj_block.T_All()
    t_mobj_layer_rectangle.T_All()
    t_mobj_birchforest.T_All()

    -- enterprise tests
    t_test.T_All()
    t_forestry.T_All()
    t_factory.T_All()
    t_energy.T_All()
end

function T_ResetWorld()
    coreinventory.ResetAllItems()
    coreassignment.Reset()
    enterprise_assignmentboard.Reset()
    enterprise_projects.DeleteProjects()
    enterprise_energy.ResetParameters()
    enterprise_factory.DeleteSites()
    enterprise_turtle.Reset()
    enterprise_chests.DeleteChests()
    enterprise_shop.DelistSuppliers()
    enterprise_forestry.DeleteForests()
end

function T_coreutils_DoCallback()
    -- test DoCallback
    corelog.WriteToLog("# Test DoCallback")
    local callbackFunction = "t_main.Func1_Callback"
    local callbackData = {"some callback data"}
    local result = {"some task result"}

    corelog.WriteToLog("T_coreutils_DoCallback calling DoCallback("..callbackFunction..", "..textutils.serialize(callbackData)..", "..textutils.serialize(result)..")")
    coreutils.DoCallback(callbackFunction, callbackData, result)
end

function T_coreutils_DoSyncService()
    -- test DoSyncService
    corelog.WriteToLog("# Test DoSyncService")
    local serviceFunction = "enterprise_test.TestPureLogicService_SSrv"
    local serviceData = {"some service data"}

    corelog.WriteToLog("T_coreutils_DoSyncService calling DoSyncService("..serviceFunction..", "..textutils.serialize(serviceData)..")")
    local results = coreutils.DoSyncService(serviceFunction, serviceData)
    corelog.WriteToLog("T_coreutils_DoSyncService results = "..textutils.serialize(results))
end

function Func1_Callback(callbackData, taskResult)
--    corelog.WriteToLog("  doing t_main.Func1_Callback("..textutils.serialise(callbackData)..", "..textutils.serialise(taskResult)..")")
end

function GoHomeCallBack(callbackData, taskResult)
    corelog.WriteToLog("  doing t_main.GoHomeCallBack("..textutils.serialise(callbackData)..", "..textutils.serialise(taskResult)..")")

    t_move.T_GoHome()
end






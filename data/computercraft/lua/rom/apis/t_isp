function T_DummyURLTryoutCode()
    -- This code is not yet implemented. Just meant as a way to tryout a possible format for using URL's to handle items based on a private discussion on Signal.

    -- create project definition
    local projectInputData = {
        itemsSourceURL = "ccwitp://storage/site=2/outputchest=4/?minecraft:birch_log=1&minecraft:torch=5",
        itemsLocalInputURL = "ccwitp://factory/site=3/inputchest=2",
        itemsLocalOutputURL = "ccwitp://factory/site=3/ouputchest=1",
        itemsDestinationURL = "ccwitp://storage/"
     }
    local callbackFunction = "t_main.Func1_Callback"
    local callbackData = {"some callback data"}
    local aTypicalServiceUsingItemsProject = {
        services    = {
            { serviceName = "enterprise_isp.TransferItemsFromTo ", async = true, input = {
                { keyName = "sourceURL"         , valueSource = 0, sourceKey = "itemsSourceURL" },
                { keyName = "destinationURL"    , valueSource = 0, sourceKey = "itemsLocalInputURL" },
            }},

            -- other services (that e.g. could require items in a turtle's iventory) to implement the typical service

            { serviceName = "enterprise_isp.TransferItemsFromTo", async = true, input = {
                { keyName = "sourceURL"         , valueSource = 0, sourceKey = "itemsLocalOutputURL" },
                { keyName = "destinationURL"    , valueSource = 0, sourceKey = "itemsDestinationURL" },
            }},
            { serviceName = "enterprise_projects.AllTrue", async = false, input = {
                { keyName = "success1"          , valueSource = 1, sourceKey = "success" },
                { keyName = "successN"          , valueSource = 2 --[[ likely higher]], sourceKey = "success" },
            }},
        },
        returnData  = {
            { keyName = "success"               , valueSource = 3 --[[ likely higher]], sourceKey = "success" },
        }
    }

    -- start project
    enterprise_projects.StartProject(aTypicalServiceUsingItemsProject, projectInputData, callbackFunction, callbackData)
end



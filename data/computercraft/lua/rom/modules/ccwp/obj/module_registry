local ModuleRegistry = {
    modules = {},
}

function ModuleRegistry:getModule(name)
    return self.modules[name]
end

local instance = nil
function ModuleRegistry:getInstance()
    if not instance then
        instance = setmetatable({}, { __index = ModuleRegistry })
    end
    return instance
end

function ModuleRegistry:registerModule(name, module)
    self.modules[name] = module
end

function ModuleRegistry:requireAndRegisterObject(name, requireName)
    -- use require to get module
    requireName = requireName or name
    local module = require(requireName)

    -- register object
    self:registerModule(name, module)
end

function ModuleRegistry:requireAndRegisterObjectTests(name)
    self:requireAndRegisterObject(name, "test."..name)
end

return ModuleRegistry

local ModuleRegistry = {
    objects = {},
}

function ModuleRegistry:getObject(name)
    return self.objects[name]
end

local instance = nil
function ModuleRegistry:getInstance()
    if not instance then
        instance = setmetatable({}, { __index = ModuleRegistry })
    end
    return instance
end

function ModuleRegistry:registerObject(name, object)
    self.objects[name] = object
end

function ModuleRegistry:requireAndRegisterObject(name, requireName)
    -- use require to get object
    requireName = requireName or name
    local object = require(requireName)

    -- register object
    self:registerObject(name, object)
end

function ModuleRegistry:requireAndRegisterObjectTests(name)
    self:requireAndRegisterObject(name, "test."..name)
end

return ModuleRegistry

local CallDef = require "obj_call_def"

local TaskCall = CallDef:new()

local MethodExecutor = require "method_executor"

--[[
    This file implements the class TaskCall.

    A TaskCall defines the call to a task function including the taskData.

    A task function should take one argument
        taskData                - (table) data to supply to task function to be able to perform the task
    and return
        taskResult              - (table) return data of the task function
--]]

--                _     _ _         __                  _   _
--               | |   | (_)       / _|                | | (_)
--    _ __  _   _| |__ | |_  ___  | |_ _   _ _ __   ___| |_ _  ___  _ __  ___
--   | '_ \| | | | '_ \| | |/ __| |  _| | | | '_ \ / __| __| |/ _ \| '_ \/ __|
--   | |_) | |_| | |_) | | | (__  | | | |_| | | | | (__| |_| | (_) | | | \__ \
--   | .__/ \__,_|_.__/|_|_|\___| |_|  \__,_|_| |_|\___|\__|_|\___/|_| |_|___/
--   | |
--   |_|

function TaskCall:call()
    --[[
        This method executes the task with predefined task data.

        Return value:
                                    - (table) return data of task function

        Parameters:
    ]]

    -- call method
    return MethodExecutor.CallModuleMethod(self._moduleName, self._methodName, { self._data })
end

return TaskCall

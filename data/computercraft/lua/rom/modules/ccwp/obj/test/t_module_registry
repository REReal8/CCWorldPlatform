local T_ModuleRegistry = {}
local corelog = require "corelog"

local ModuleRegistry = require "module_registry"

function T_ModuleRegistry.T_All()
    T_ModuleRegistry.T_registerAndGetObject()
end

function T_ModuleRegistry.T_registerAndGetObject()
    -- prepare test
    corelog.WriteToLog("* ModuleRegistry:registerModule() and ModuleRegistry:getModule() tests")
    local module1 = {name = "module1"}
    local module2 = {name = "module2"}
    local registry = ModuleRegistry:getInstance()

    -- test valid

    -- Register the modules with the registry
    registry:registerModule("module1", module1)
    registry:registerModule("module2", module2)

    -- Get the modules back from the registry
    local retrievedObject1 = registry:getModule("module1")
    local retrievedObject2 = registry:getModule("module2")

    -- Use assertions to confirm that the retrieved modules match the original modules
    assert(retrievedObject1 == module1, "Retrieved module 1 does not match original module 1")
    assert(retrievedObject2 == module2, "Retrieved module 2 does not match original module 2")

    -- cleanup test
end

return T_ModuleRegistry

local coreassignment = {}
local coresystem = require "coresystem"
local coredht = require "coredht"
local corelog = require "corelog"

local MethodExecutor = require "function_executor"

local enterprise_assignmentboard = require "enterprise_assignmentboard"
local enterprise_turtle

local db = {
    rejectAllAssignments    = false,
}

--[[
    coreassignment offers functionality to have computers or turtles execute assignments advertised by enterprise_assignmentboard.

    An assignment revolves around a Task. A Task is a sequence of things that needs to be done (i.e. moving, rotating, placing etc) without interruption
    in the physical minecraft world. A Task typically takes some time to execute.

    Two functions are involved with each assignment:
        - a task function defining the Task that needs to be executed.
        - a callback function that needs to be executed once the task has completed.

    A task function should take one parameter
        taskData                - (table) data to supply to task function to be able to perform the task
    and return a single result
        taskResult              - (table) with return data of the task function
    By convention a task function name should end with _Task (e.g. DoSomeWork_Task)

    A callback function should take two parameters
        callbackData            - (table) with predefined (additional) data to supply the callback with
        taskResult              - (table) with the return data of the task function
    and does not have a return value (i.e. it's nil).
--]]

--                _     _ _         __                  _   _
--               | |   | (_)       / _|                | | (_)
--    _ __  _   _| |__ | |_  ___  | |_ _   _ _ __   ___| |_ _  ___  _ __  ___
--   | '_ \| | | | '_ \| | |/ __| |  _| | | | '_ \ / __| __| |/ _ \| '_ \/ __|
--   | |_) | |_| | |_) | | | (__  | | | |_| | | | | (__| |_| | (_) | | | \__ \
--   | .__/ \__,_|_.__/|_|_|\___| |_|  \__,_|_| |_|\___|\__|_|\___/|_| |_|___/
--   | |
--   |_|

function coreassignment.Init()
end

function coreassignment.Setup()
    -- pas als de dht klaar is...
    coredht.DHTReadyFunction(enterprise_assignmentboard.DHTReadySetup) -- ToDo: consider doing this in enterprise_assignmentboard itself
end

function coreassignment.Run()
    -- is the dth available?
    while not coredht.IsReady() do

        -- just wait
        os.sleep(0.25)
    end

    -- some variables
    local computerId = os.getComputerID()

    -- infinite loop
    while coresystem.IsRunning() and not db.rejectAllAssignments do
        -- get assignment for turtle
        enterprise_turtle = enterprise_turtle or require "enterprise_turtle"
        local serviceResults = enterprise_turtle.GetAssignmentForTurtle_SSrv({ turtleId = computerId })
        if not serviceResults.success then corelog.Error("coreassignment.Run: failure in getting new assignment") end
        local nextAssignment = serviceResults.assignment

        -- did we get the assignment?
        if nextAssignment then
            -- do the assignment
            DoAssignment(nextAssignment)
        else os.sleep(0.25)     -- apparently no assignment for me now
        end
    end
end

function coreassignment.RejectAllAssignments()
    -- just remember for now, nothing else
    db.rejectAllAssignments = true
end

function coreassignment.Reset()
    -- reset (local) db
    db.rejectAllAssignments                     = false
end

--    _                 _    __                  _   _
--   | |               | |  / _|                | | (_)
--   | | ___   ___ __ _| | | |_ _   _ _ __   ___| |_ _  ___  _ __  ___
--   | |/ _ \ / __/ _` | | |  _| | | | '_ \ / __| __| |/ _ \| '_ \/ __|
--   | | (_) | (_| (_| | | | | | |_| | | | | (__| |_| | (_) | | | \__ \
--   |_|\___/ \___\__,_|_| |_|  \__,_|_| |_|\___|\__|_|\___/|_| |_|___/

function DoAssignment(assignment)
    -- we have taken this assignment!
    local assignmentId = assignment.assignmentId
    enterprise_assignmentboard.TakeAssignment(assignmentId)

    -- call task function
    corelog.WriteToAssignmentLog("Starting task", assignmentId)
    corelog.WriteToLog("Starting "..assignment.taskFunction)
    local taskResult = MethodExecutor.DoSyncService(assignment.taskFunction, assignment.taskData)
    corelog.WriteToAssignmentLog("Completed task (result="..textutils.serialize(taskResult)..")", assignmentId)

    -- call callBack function
    corelog.WriteToAssignmentLog("Calling callback function", assignmentId)
    MethodExecutor.DoCallback(assignment.callbackFunction, assignment.callbackData, taskResult)

    -- we have done all for this assignment that we needed to do
    enterprise_assignmentboard.EndAssignment(assignmentId)
end

return coreassignment

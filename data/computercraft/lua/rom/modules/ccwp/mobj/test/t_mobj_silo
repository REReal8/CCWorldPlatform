local T_Silo = {}
local corelog = require "corelog"
local coreutils = require "coreutils"
local coremove = require "coremove"
local coredht = require "coredht"

local role_fuel_worker = require "role_fuel_worker"

local Callback = require "obj_callback"
local Location = require "obj_location"
local Inventory = require "obj_inventory"
local URL = require "obj_url"

local Silo = require "mobj_silo"

local enterprise_turtle = require "enterprise_turtle"
local enterprise_chests = require "enterprise_chests"

function T_Silo.T_All()
    -- base methods
    T_Silo.T_new()
    T_Silo.T_Load()
end

-- handy
local location1  = Location:new({_x= 12, _y= 12, _z= 1, _dx=0, _dy=1})

--    _                                     _   _               _
--   | |                                   | | | |             | |
--   | |__   __ _ ___  ___   _ __ ___   ___| |_| |__   ___   __| |___
--   | '_ \ / _` / __|/ _ \ | '_ ` _ \ / _ \ __| '_ \ / _ \ / _` / __|
--   | |_) | (_| \__ \  __/ | | | | | |  __/ |_| | | | (_) | (_| \__ \
--   |_.__/ \__,_|___/\___| |_| |_| |_|\___|\__|_| |_|\___/ \__,_|___/

function T_Silo.T_new()

    -- do the new test
    corelog.WriteToLog("* Silo:new() tests")
    local silo = Silo:new({location=location1, topChests=2, layers=2})
end

function T_Silo.T_Load()

    -- we are calling the shots now
    corelog.WriteToLog("* Silo:new() tests")

    -- lijstje met alle silo's
    local silos = coredht.GetData("mobj_silo")

    -- get a random key
    local key = next(silos, nil)

    -- load the damn silo
    local silo = Silo:Load(key)

    -- what do we have?
    corelog.WriteToLog("silo id = "..(silo._id or ""))
end

return T_Silo

ToDo List
---------

R  finish MObjHost
   R  test delistMObj_SSrv                                        (done)
   R  test removeMObj_ASrv                                        (done)
   R  remove completeRunningBusiness_AOSrv from IMObj interface   (done)
   R  rewrite waiting for completion of running business (remove usage of completeRunningBusiness_AOSrv + use WIPAdministrator)  (done)
   R  (re)consider relevant method naming:                        (done)
                  MObjHost          MObjHost       (MObj)Host  MObj           MObj        -  MObjHost                MObjHost    (MObj)Host     MObj                 MObj        -  ent_constr
      - now:      addMObj           registerMObj   saveObject  buildBlueprint construct   -  removeMObj              delistMObj  deleteResource dismantleBlueprint   destruct    -  build
      - option1:  createNew         ?              ?           buildBlueprint construct   -  destroy                 ?           ?              dismantleBlueprint   destruct    -  build
      - option2:  hostAndBuildMObj  hostMObj       saveObject  buildBlueprint construct   -  dismantleAndReleaseMObj releaseMObj deleteResource dismantleBlueprint   destruct    -  build
      - based on the following conversation I have chosen option 2: https://chat.openai.com/share/65d3e63b-7618-4522-a436-e88964f4d293
   -  Support updating of MObj's

R  Dummy callback             (done)
   R  in more logical class   (done)
   R  easier way to obtain    (done)

RG ensure all MObj's follow IMObj interface
   R  mobj_birchforest
   R  mobj_chest              (done)
   R  mobj_factory
   G  mobj_mine
   G  mobj_silo
   R  mobj_shop
   R  mobj_turtle

R  use MObjHost class
   R  enterprise_forest
      R  upgrade to a MObjHost
      R  use new MObjHost methods instead of current equivalent
   R  enterprise_chest
      R  upgrade to a MObjHost                                    (done)
      R  use new MObjHost methods instead of current equivalent   (done)
      -  merge into enterprise_storage
   R  enterprise_factory
      R  upgrade to a MObjHost
      R  use new MObjHost methods instead of current equivalent
   -  enterprise_gathering
      -  upgrade into an MObjHost
      -  use new MObjHost methods instead of current equivalent
   -  enterprise_storage
      -  upgrade into an MObjHost
      -  use new MObjHost methods instead of current equivalent
   R  enterprise_shop
      R  upgrade into an MObjHost
      R  use new MObjHost methods instead of current equivalent
      -  rename enterprise_shop to better name: e.g. enterprise_shopping or enterprise_itemsupplier
   R  enterprise_turtle
      R  upgrade into an MObjHost
      R  use new MObjHost methods instead of current equivalent
   -  see if we can make (or refactor existing) general test (template) functions for MObj's; i.e. for hosting, building, releasing, etc

-  Support building blueprints (layers) from front

G  blueprint
   G  Blueprint layer holds a desription / name
   G  used to pass to project step (zodat het in de status schermen te zien is)
   -  Introduce Blueprint objects

G  enterprise_project
   -  consider introducing a Project object (class)!, and using that in enterprise_project
   G  description field for debugging (done, use projectMeta.title and projectMeta.description)
   G  project stappen kunnen een naam krijgen, add e.g stepName = "kaas" field to step block, e.g.
         { stepType = "SSrv", stepName = "kaas", stepTypeDef = { moduleName = "enterprise_test", serviceName = "Test_SSrv" }, stepDataDef = {
                { keyDef = "testArg"        , sourceStep = 0, sourceKeyDef = "testTable4" },
         }},
      en worden gebruikt voor sourceStep's, e.g.
         { keyDef = "testArg"        , sourceStep = "kaas", sourceKeyDef = "testArgSource" },
   -  (nested?) sequential projectStep
            { stepType = "SerialSteps", stepTypeDef = { aoWIPId = "myId", }, stepDataDef = {                                        -- sourceStep = 10 (or stepName)
                { stepType = "SSrv", stepTypeDef = { moduleName = "enterprise_test", serviceName = "Test_SSrv" }, stepDataDef = {   -- sourceStep = 10.1
                    { keyDef = "testArg"        , sourceStep = 0, sourceKeyDef = "testArgSource" },
                }},
                { stepType = "ASrv", stepTypeDef = { moduleName = "enterprise_test", serviceName = "Test_ASrv" }, stepDataDef = {   -- sourceStep = 10.2
                    { keyDef = "testArg"        , sourceStep = 0, sourceKeyDef = "testArgSource" },
                }},

                -- additional steps to perform in sequence                                                                          -- sourceStep = 10.n

                returnData  = {
                    { keyDef = "testBArg0"              , sourceStep = 0, sourceKeyDef = "testArgSource" },
                }
            }},
   -  (nested?) parellel projectStep
            { stepType = "ParellelSteps", stepTypeDef = { aoWIPId = "myId", }, stepDataDef = {
                -- as above with any stepType (including SerialSteps), i.e.
                -- sourceStep = 11.1
                --              11.1.1
                --              11.1.2 S
                --              11.2

                -- additional steps to perform in parellel                                                                          -- sourceStep = 11.n
            }},
   -  error handling (no_error, ignored errors, failed on error)

-  waste handling (equivalent aan de shop: enterprise_wastehandling + (m)obj_wastehandler) (enterprise_wastehandling?)
   -  v1
      RG adjust part of IItemSupplier:provideItemsTo_AOSrv to get a wasteItemDepotLocator as argument                      (done)
      R  add wasteItemDepotLocator to methods where (p|P)rovideItemsTo_AOSrv, and the parent methods of those, are used    (done)
      -  gebruik wasteItemDepotLocator in factory (done)
      -  gebruik wasteItemDepotLocator in forest, contruction
      G  forrester return havested items so waste can be calculated
   -  v2
      -  create obj_wastehandler and enterprise_wastehandling
      -  turtle registers in (m)obj_wastehandler
      -  rename enterprise_storage into enterprise_warehousing
      -  silo registers in (m)obj_wastehandler
   -  v3
      -  registers local chests of mobj's (forest, factory, etc) in (mo)bj_wastehandler
      -  ensure it takes the closest

G  mine v2 maken

R  Factory:
   -  remove static method style code (remaining from before it was a mobj)
   -  ensure no longer need to register it as a module in the mobj library
   -  split into CraftSpot & SmeltSpot MObj's

-  ItemSupplierGroup & ItemDepotGroup
   -  there seems to be a pattern where multiple (m)obj's handle groups of ItemSupplier's (or ItemDepot's), e.g.
      -  in the Shop (or WasteHandler)
      -  for top chests
      -  for storage "chests" in the Silo
      -  in the Factory?
   -  part of this code is/ seems to be the same
   -  we should investigate if we can introduce a ItemSupplierGroup object that implements the common code that can subsequentyly be reused.

-  improve IItemDepot and IItemSupplier interfaces

G  player station
   -  v1.0: input & output chest UI

-  IItemSupplier & IItemDepot interface
   -  consider better name for provideTo and storeFrom reflecting the fact that storeFrom is simpler
   -  don't do anything when itemList is empty --> where do check?

-  recipe book

-  Bug: Factory:provideItemsTo_AOSrv meerdere items zorgt voor meerdere keren aanroepen van callback terwijl het er maar 1 moet zijn

-  create (& use) multiple turtles

-  availability
   -  e.g. no 2 turtles into 1 silo shaft

-  claiming
   -  items (in suppliers)
   -  free slots (in depot's)

-  IObj logic semi-automatic
   -  copy
   -  isSame
   -  etc

-  enterprise_energy
   -  coal fuel (v5 enterprise)

-  tool management
   -  does a turtle have it's own tools?

-  add .lua extension to all lua code files (besides being a good convention, it also helps in the VSC)

-  Other ToDo's to be found everywhere in all code files

G  Display verbeteren
   G  display blijft na kiezen van een test optie in de groep waar de test gekozen is
   G  display gebruikt 2 kolommen als er veel tests zijn
   R  niet meer dan 2 rijen met tests definieren (done)

G moveTo:
   - v2.0: (snel) wegen (veel)

-  Bij inschrijven assigment controleren of er een pickaxe in de inventory zit (indien not equiped)


*** history ***

R  WIPAdministrator (formerly knows as AdministrationOffice)   (done)
   R  introduce enterprise_administration                      (done)
   R  finish WIPAdministrator                                  (done)
      R  load/ save itself after one if the 3 WIP calls        (done)
   R  enterprise_project: optionally administer project started and completed in WIPAdministrator  (done)
   R  write WIPAdministrator tests                             (done)

G moveTo:
   G v1.2: boven maaiveld even wat intilligenter dan nu        (done)

G  display station (Yahoo!!, working (except for building it)) (done)
   -  system status (e.g. fuel per turtle, silo)               (done)
   -  logging                                                  (done)

G  turtle without db/inventory.lua file should check for tool present (done)

